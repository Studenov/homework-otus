const fs = require('fs');
const { PATH_TO_MAIN_FILE, PATH_TO_CHUNK_FILE, HIGH_WATER_MARK } = require('./constants');
const { MergeSort } = require('./utils');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª, –µ—Å–ª–∏ –Ω–µ—Ç –≤—ã–∫–∏–¥—ã–≤–∞–µ–º –æ—à–∏–±–∫—É
if (!fs.existsSync(PATH_TO_MAIN_FILE)) {
  return console.error('ü§Øü§Øü§Ø', '\x1b[31m', '–§–∞–π–ª –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç npm run sort:create —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å —Ñ–∞–π–ª!');
}

const dirChunk = fs.existsSync(PATH_TO_CHUNK_FILE);

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è —á–∞–Ω–∫–æ–≤, –µ—Å–ª–∏ –Ω–µ—Ç —Å–æ–∑–¥–∞–µ–º –µ–µ
if (!dirChunk) {
  fs.mkdirSync(PATH_TO_CHUNK_FILE);
}

function PromiseChunk(resolve, reject) {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —á–∞–Ω–∫–∏ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏, –µ—Å–ª–∏ –¥–∞, —Ç–æ –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
  if (dirChunk && fs.readdirSync(PATH_TO_CHUNK_FILE, { encoding: 'utf-8' }).length !== 0) {
    console.log('–ß–∞–Ω–∫–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç!');
    resolve();
  }

  let counter = 0;
  // –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä–∏–º –¥–ª—è —á—Ç–µ–Ω–∏—è –∏–∑ –≤—Ö–æ–¥—è—â–µ–≥–æ —Ñ–∞–π–ª–∞
  const readStream = fs.createReadStream(PATH_TO_MAIN_FILE, { encoding: 'utf8', highWaterMark: HIGH_WATER_MARK });

  // –ß–∏—Ç–∞–µ–º —á–∞–Ω–∫–∏ –∏–∑ —Ñ–∞–π–ª–∞ –∏ —Ä–∞—Å–ø–∏—Ö–∏–≤–∞–µ–º –ø–æ —Ñ–∞–π–ª–∞–º, –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–≤
  readStream.on('data', (chunk) => {
    const numbersArr = chunk.split(' ');
    const sortedChunk = MergeSort(numbersArr).join(' ');
    const writeStream = fs.createWriteStream(`${PATH_TO_CHUNK_FILE}/chunk-${counter}.txt`);
    writeStream.write(sortedChunk);
    counter += 1;
    writeStream.end();
  });

  readStream.on('close', () => {
    console.log('–ß–∞–Ω–∫–∏ —Å–æ–∑–¥–∞–Ω—ã!');
    resolve();
  });

  readStream.on('error', (err) => {
    console.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —á–∞–Ω–∫–æ–≤!');
    reject(err);
  });
}

function CreateChunk() {
  const promise = new Promise(PromiseChunk);
  return promise;
}

module.exports = {
  CreateChunk,
};
